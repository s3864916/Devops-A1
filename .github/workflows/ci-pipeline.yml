name: Notes Application CI Pipeline


on:
  push:
    branches:
      - "feature/*"
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "17.6.0"
      - name: Install dependencies
        run: npm clean-install --prefix src
      - name: List out packages
        run: npm list --prefix src
      - name: Run linter
        run: npm run test-lint --prefix src
  
  unit-tests:
    # needs: lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: "17.6.0"

    - name: Install dependencies
      run: npm clean-install --prefix src

    - name: Run unit tests
      run: npm run test-unit --prefix src

    - name: Unit-test artifact upload
      uses: actions/upload-artifact@v2
      with:
        name: unit-test-${{ github.sha }}
        path: src/reports/report.xml

    - name: Coverage check artifact upload
      uses: actions/upload-artifact@v2
      with:
        name: coverage-${{ github.sha }}
        path: src/coverage/coverage-final.json

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [lint, unit-tests]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: "17.6.0"

    - name: Install dependencies
      run: npm clean-install --prefix src
    
    - name: Build deploy file
      run: npm run build --prefix src

    - name: Deploy artifact upload in condition # if fail then don't generate the artifact
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: coverage-${{ github.sha }}
        path: src/coverage/coverage-final.json